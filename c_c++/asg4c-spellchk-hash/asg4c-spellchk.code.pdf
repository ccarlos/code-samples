%PDF-1.2
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
1 i
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 283.25 736.5 Tm
(auxlib.h)Tj
-136.286 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: auxlib.h,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __AUXLIB_H__)]TJ
T*[(4:)-600(#define __AUXLIB_H__)]TJ
(5:)'
T*[(6:)-600(//)]TJ
T*[(7:)-600(// DESCRIPTION)]TJ
T*[(8:)-600(//    Auxiliary library containing miscellaneous useful things.)]TJ
T*[(9:)-600(//)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(//)]TJ
T*[(12:)-600(// Miscellaneous useful typedefs.)]TJ
T*[(13:)-600(//)]TJ
(14:)'
T*[(15:)-600(typedef enum {FALSE = 0, TRUE = 1} bool;)]TJ
(16:)'
T*[(17:)-600(//)]TJ
T*[(18:)-600(// Error message and exit status utility.)]TJ
T*[(19:)-600(//)]TJ
(20:)'
T*[(21:)-600(void set_execname \(char *argv0\);)]TJ
T*[(22:)-600(   //)]TJ
T*[(23:)-600(   // Sets the program name for use by auxlib messages.)]TJ
T*[(24:)-600(   // Must called from main before anything else is done,)]TJ
T*[(25:)-600(   // passing in argv[0].)]TJ
T*[(26:)-600(   //)]TJ
(27:)'
T*[(28:)-600(char *get_execname \(void\);)]TJ
T*[(29:)-600(   //)]TJ
T*[(30:)-600(   // Returns a read-only value previously stored by set_progname.)]TJ
T*[(31:)-600(   //)]TJ
(32:)'
T*[(33:)-600(void dprintf \(char *format, ...\);)]TJ
T*[(34:)-600(   //)]TJ
T*[(35:)-600(   // Print a message to stderr according to the printf format)]TJ
T*[(36:)-600(   // specified.  Usually called for debug output.)]TJ
T*[(37:)-600(   // Precedes the message by the program name if the format)]TJ
T*[(38:)-600(   // begins with the characters `%:'.)]TJ
T*[(39:)-600(   //)]TJ
(40:)'
T*[(41:)-600(void eprintf \(char *format, ...\);)]TJ
T*[(42:)-600(   //)]TJ
T*[(43:)-600(   // Print an error message according to the printf format)]TJ
T*[(44:)-600(   // specified.  Precedes the message by the program name if)]TJ
T*[(45:)-600(   // the format begins with the characters "%:".)]TJ
T*[(46:)-600(   //)]TJ
(47:)'
T*[(48:)-600(void syseprintf \(char *object\);)]TJ
T*[(49:)-600(   //)]TJ
T*[(50:)-600(   // Print a message resulting from a bad system call.  The)]TJ
T*[(51:)-600(   // object is the name of the object causing the problem and)]TJ
T*[(52:)-600(   // the reason is taken from the external variable errno.)]TJ
T*[(53:)-600(   //)]TJ
(54:)'
T*[(55:)-600(int get_exitstatus \(void\);)]TJ
T*[(56:)-600(   //)]TJ
T*[(57:)-600(   // Returns the exit status.  Default is EXIT_SUCCESS unless)]TJ
T*[(58:)-600(   // set_exitstatus \(int\) is called.  The last statement in main)]TJ
T*[(59:)-600(   // should be:  ``return get_exitstatus\(\);''.)]TJ
T*[(60:)-600(   //)]TJ
(61:)'
T*[(62:)-600(void set_exitstatus \(int\);)]TJ
T*[(63:)-600(   //)]TJ
T*[(64:)-600(   // Sets the exit status.  Remebers only the largest value passed in.)]TJ
ET
Q
Q
endstream
endobj
6 0 obj
3144
endobj
14 0 obj
<</Length 15 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 283.25 736.5 Tm
(auxlib.h)Tj
-136.286 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-84.9641 -35.5 Td
[(65:)-600(   //)]TJ
11 TL
(66:)'
T*[(67:)-600(//)]TJ
T*[(68:)-600(// Redefinition of a few functions to keep lint from whining about)]TJ
T*[(69:)-600(// ``function returns value which is always ignored''.  This is not)]TJ
T*[(70:)-600(// generally recommended, but illustrates a very hackish way of)]TJ
T*[(71:)-600(// keeping lint quiet.  Generally, it is recommended just to ignore)]TJ
T*[(72:)-600(// that particular message.)]TJ
T*[(73:)-600(//)]TJ
(74:)'
T*[(75:)-600(#define xfclose   \(void\) fclose)]TJ
T*[(76:)-600(#define xfflush   \(void\) fflush)]TJ
T*[(77:)-600(#define xfprintf  \(void\) fprintf)]TJ
T*[(78:)-600(#define xmemset   \(void\) memset)]TJ
T*[(79:)-600(#define xprintf   \(void\) printf)]TJ
T*[(80:)-600(#define xsprintf  \(void\) sprintf)]TJ
T*[(81:)-600(#define xvfprintf \(void\) vfprintf)]TJ
T*[(82:)-600(#define xvprintf  \(void\) vprintf)]TJ
(83:)'
T*[(84:)-600(//)]TJ
T*[(85:)-600(// Support for stub messages.)]TJ
T*[(86:)-600(//)]TJ
T*[(87:)-600(#define STUBPRINTF\(...\) \\)]TJ
T*[(88:)-600(        __stubprintf \(__FILE__, __LINE__, __func__, __VA_ARGS__\))]TJ
T*[(89:)-600(void __stubprintf \(char *file, int line, const char *func,)]TJ
T*[(90:)-600(                   char *format, ...\);)]TJ
(91:)'
T*[(92:)-600(//)]TJ
T*[(93:)-600(// Debugging utility.)]TJ
T*[(94:)-600(//)]TJ
(95:)'
T*[(96:)-600(void set_debugflags \(char *flags\);)]TJ
T*[(97:)-600(   //)]TJ
T*[(98:)-600(   // Sets a string of debug flags to be used by DEBUGF statements.)]TJ
T*[(99:)-600(   // Uses the address of the string, and does not copy it, so it)]TJ
-6 -11 Td
[(100:)-600(   // must not be dangling.  If a particular debug flag has been set,)]TJ
T*[(101:)-600(   // messages are printed.  The format is identical to printf format.)]TJ
T*[(102:)-600(   // The flag "@" turns on all flags.)]TJ
T*[(103:)-600(   //)]TJ
(104:)'
T*[(105:)-600(#ifdef NDEBUG)]TJ
T*[(106:)-600(#define DEBUGF\(FLAG,...\) // DEBUG \(FLAG, __VA_ARGS__\))]TJ
T*[(107:)-600(#else)]TJ
T*[(108:)-600(#define DEBUGF\(FLAG,...\) \\)]TJ
T*[(109:)-600(        __debugprintf \(FLAG, __FILE__, __LINE__, __VA_ARGS__\))]TJ
T*[(110:)-600(void __debugprintf \(char flag, char *file, int line,)]TJ
T*[(111:)-600(                    char *format, ...\);)]TJ
T*[(112:)-600(#endif)]TJ
(113:)'
T*[(114:)-600(#endif)]TJ
(115:)'
ET
Q
Q
endstream
endobj
15 0 obj
2825
endobj
18 0 obj
<</Length 19 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.143 736.5 Tm
(hashset.h)Tj
-133.179 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: hashset.h,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __HASHSET_H__)]TJ
T*[(4:)-600(#define __HASHSET_H__)]TJ
(5:)'
T*[(6:)-600(#include "auxlib.h")]TJ
(7:)'
T*[(8:)-600(typedef struct hashset *hashset_ref;)]TJ
(9:)'
-6 -11 Td
[(10:)-600(//)]TJ
T*[(11:)-600(// Create a new hashset with a default number of elements.)]TJ
T*[(12:)-600(//)]TJ
T*[(13:)-600(hashset_ref new_hashset \(void\);)]TJ
(14:)'
T*[(15:)-600(//)]TJ
T*[(16:)-600(// Frees the hashset, and the words it points at.)]TJ
T*[(17:)-600(//)]TJ
T*[(18:)-600(void free_hashset \(hashset_ref\);)]TJ
(19:)'
T*[(20:)-600(//)]TJ
T*[(21:)-600(// Inserts a new string into the hashset.)]TJ
T*[(22:)-600(//)]TJ
T*[(23:)-600(void put_hashset \(hashset_ref, char*\);)]TJ
(24:)'
T*[(25:)-600(//)]TJ
T*[(26:)-600(// Looks up the string in the hashset and returns TRUE if found,)]TJ
T*[(27:)-600(// FALSE if not found.)]TJ
T*[(28:)-600(//)]TJ
T*[(29:)-600(bool has_hashset \(hashset_ref, char*\);)]TJ
(30:)'
T*[(31:)-600(#endif)]TJ
(32:)'
ET
Q
Q
endstream
endobj
19 0 obj
1556
endobj
22 0 obj
<</Length 23 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.843 736.5 Tm
(strhash.h)Tj
-133.879 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: strhash.h,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(//)]TJ
T*[(4:)-600(// NAME)]TJ
T*[(5:)-600(//    strhash - return an unsigned 32-bit hash code for a string)]TJ
T*[(6:)-600(//)]TJ
T*[(7:)-600(// SYNOPSIS)]TJ
T*[(8:)-600(//    hashcode_t strhash \(char *string\);)]TJ
T*[(9:)-600(//)]TJ
-6 -11 Td
[(10:)-600(// DESCRIPTION)]TJ
T*[(11:)-600(//    Uses Horner's method to compute the hash code of a string)]TJ
T*[(12:)-600(//    as is done by java.lang.String.hashCode:)]TJ
T*[(13:)-600(//    .  s[0]*31^\(n-1\) + s[1]*31^\(n-2\) + ... + s[n-1])]TJ
T*[(14:)-600(//    Using strength reduction, the multiplication is replaced by)]TJ
T*[(15:)-600(//    a shift.  However, instead of returning a signed number,)]TJ
T*[(16:)-600(//    this function returns an unsigned number.)]TJ
T*[(17:)-600(//)]TJ
T*[(18:)-600(// REFERENCE)]TJ
T*[(19:)-600(//    http://java.sun.com/j2se/1.4.1/docs/api/java/lang/)]TJ
T*[(20:)-600(//    String.html#hashCode\(\))]TJ
T*[(21:)-600(// )]TJ
T*[(22:)-600(//)]TJ
(23:)'
T*[(24:)-600(#ifndef __STRHASH_H__)]TJ
T*[(25:)-600(#define __STRHASH_H__)]TJ
(26:)'
T*[(27:)-600(#include <inttypes.h>)]TJ
(28:)'
T*[(29:)-600(#include "auxlib.h")]TJ
(30:)'
T*[(31:)-600(typedef uint32_t hashcode_t;)]TJ
(32:)'
T*[(33:)-600(hashcode_t strhash \(char *string\);)]TJ
(34:)'
T*[(35:)-600(#endif)]TJ
(36:)'
ET
Q
Q
endstream
endobj
23 0 obj
1880
endobj
26 0 obj
<</Length 27 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 276.18 736.5 Tm
(yyextern.h)Tj
-129.216 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: yyextern.h,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __YYEXTERN_H__)]TJ
T*[(4:)-600(#define __YYEXTERN_H__)]TJ
(5:)'
T*[(6:)-600(//)]TJ
T*[(7:)-600(// DESCRIPTION)]TJ
T*[(8:)-600(//    Definitions of external names used by flex-generated code.)]TJ
T*[(9:)-600(//)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(#include <stdio.h>)]TJ
(12:)'
T*[(13:)-600(extern FILE *yyin;            // File currently being read)]TJ
(14:)'
T*[(15:)-600(extern char *yytext;          // Pointer to the string that was found)]TJ
(16:)'
T*[(17:)-600(extern int yy_flex_debug;     // yylex's verbose tracing flag)]TJ
(18:)'
T*[(19:)-600(extern int yylex \(void\);      // Read next word from opened file yyin)]TJ
(20:)'
T*[(21:)-600(extern int yylineno;          // Line number within the current file)]TJ
(22:)'
T*[(23:)-600(extern void yycleanup \(void\); // Cleans up flex's buffers when done)]TJ
(24:)'
T*[(25:)-600(#endif)]TJ
(26:)'
ET
Q
Q
endstream
endobj
27 0 obj
1476
endobj
30 0 obj
<</Length 31 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 283.643 736.5 Tm
(auxlib.c)Tj
-136.679 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: auxlib.c,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <errno.h>)]TJ
T*[(5:)-600(#include <libgen.h>)]TJ
T*[(6:)-600(#include <limits.h>)]TJ
T*[(7:)-600(#include <stdarg.h>)]TJ
T*[(8:)-600(#include <stdio.h>)]TJ
T*[(9:)-600(#include <stdlib.h>)]TJ
-6 -11 Td
[(10:)-600(#include <string.h>)]TJ
(11:)'
T*[(12:)-600(#include "auxlib.h")]TJ
(13:)'
T*[(14:)-600(static int exitstatus = EXIT_SUCCESS;)]TJ
T*[(15:)-600(static char *execname = NULL;)]TJ
T*[(16:)-600(static char *debugflags = "";)]TJ
T*[(17:)-600(static bool alldebugflags = FALSE;)]TJ
(18:)'
T*[(19:)-600(void set_execname \(char *argv0\) {)]TJ
T*[(20:)-600(   execname = basename \(argv0\);)]TJ
T*[(21:)-600(})]TJ
(22:)'
T*[(23:)-600(char *get_execname \(void\) {)]TJ
T*[(24:)-600(   assert \(execname != NULL\);)]TJ
T*[(25:)-600(   return execname;)]TJ
T*[(26:)-600(})]TJ
(27:)'
T*[(28:)-600(static char *init_dprintf \(char *format\) {)]TJ
T*[(29:)-600(   assert \(format != NULL\);)]TJ
T*[(30:)-600(   xfflush \(NULL\);)]TJ
T*[(31:)-600(   if \(strstr \(format, "%:"\) == format\) {)]TJ
T*[(32:)-600(      xfprintf \(stderr, "%s: ", get_execname \(\)\);)]TJ
T*[(33:)-600(      format += 2;)]TJ
T*[(34:)-600(   };)]TJ
T*[(35:)-600(   return format;)]TJ
T*[(36:)-600(})]TJ
(37:)'
T*[(38:)-600(void dprintf \(char *format, ...\) {)]TJ
T*[(39:)-600(   va_list args;)]TJ
T*[(40:)-600(   format = init_dprintf \(format\);)]TJ
T*[(41:)-600(   va_start \(args, format\);)]TJ
T*[(42:)-600(   xvfprintf \(stderr, format, args\);)]TJ
T*[(43:)-600(   va_end \(args\);)]TJ
T*[(44:)-600(   xfflush \(NULL\);)]TJ
T*[(45:)-600(})]TJ
(46:)'
T*[(47:)-600(void eprintf \(char *format, ...\) {)]TJ
T*[(48:)-600(   va_list args;)]TJ
T*[(49:)-600(   assert \(execname != NULL\);)]TJ
T*[(50:)-600(   assert \(format != NULL\);)]TJ
T*[(51:)-600(   format = init_dprintf \(format\);)]TJ
T*[(52:)-600(   va_start \(args, format\);)]TJ
T*[(53:)-600(   xvfprintf \(stderr, format, args\);)]TJ
T*[(54:)-600(   va_end \(args\);)]TJ
T*[(55:)-600(   xfflush \(NULL\);)]TJ
T*[(56:)-600(   exitstatus = EXIT_FAILURE;)]TJ
T*[(57:)-600(})]TJ
(58:)'
T*[(59:)-600(void syseprintf \(char *object\) {)]TJ
T*[(60:)-600(   eprintf \("%:%s: %s\\n", object, strerror \(errno\)\);)]TJ
T*[(61:)-600(})]TJ
(62:)'
T*[(63:)-600(int get_exitstatus \(void\) {)]TJ
T*[(64:)-600(   return exitstatus;)]TJ
ET
Q
Q
endstream
endobj
31 0 obj
2919
endobj
34 0 obj
<</Length 35 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 283.643 736.5 Tm
(auxlib.c)Tj
-136.679 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-84.9641 -35.5 Td
[(65:)-600(})]TJ
11 TL
(66:)'
T*[(67:)-600(void set_exitstatus \(int newexitstatus\) {)]TJ
T*[(68:)-600(   newexitstatus &= 0xFF;)]TJ
T*[(69:)-600(   if \(exitstatus < newexitstatus\) exitstatus = newexitstatus;)]TJ
T*[(70:)-600(   DEBUGF \('a', "exitstatus = %d\\n", exitstatus\);)]TJ
T*[(71:)-600(})]TJ
(72:)'
T*[(73:)-600(void __stubprintf \(char *file, int line, const char *func,)]TJ
T*[(74:)-600(                   char *format, ...\) {)]TJ
T*[(75:)-600(   va_list args;)]TJ
T*[(76:)-600(   xfflush \(NULL\);)]TJ
T*[(77:)-600(   xprintf \("%s: %s[%d] %s: ", execname, file, line, func\);)]TJ
T*[(78:)-600(   va_start \(args, format\);)]TJ
T*[(79:)-600(   xvprintf \(format, args\);)]TJ
T*[(80:)-600(   va_end \(args\);)]TJ
T*[(81:)-600(   xfflush \(NULL\);)]TJ
T*[(82:)-600(})]TJ
(83:)'
T*[(84:)-600(void set_debugflags \(char *flags\) {)]TJ
T*[(85:)-600(   debugflags = flags;)]TJ
T*[(86:)-600(   if \(strchr \(debugflags, '@'\) != NULL\) alldebugflags = TRUE;)]TJ
T*[(87:)-600(   DEBUGF \('a', "Debugflags = \\"%s\\"\\n", debugflags\);)]TJ
T*[(88:)-600(})]TJ
(89:)'
T*[(90:)-600(void __debugprintf \(char flag, char *file, int line,)]TJ
T*[(91:)-600(                    char *format, ...\) {)]TJ
T*[(92:)-600(   va_list args;)]TJ
T*[(93:)-600(   if \(alldebugflags || strchr \(debugflags, flag\) != NULL\) {)]TJ
T*[(94:)-600(      xfflush \(NULL\);)]TJ
T*[(95:)-600(      va_start \(args, format\);)]TJ
T*[(96:)-600(      xfprintf \(stderr, "DEBUGF\(%c\): %s[%d]:\\n",)]TJ
T*[(97:)-600(                flag, file, line\);)]TJ
T*[(98:)-600(      xvfprintf \(stderr, format, args\);)]TJ
T*[(99:)-600(      va_end \(args\);)]TJ
-6 -11 Td
[(100:)-600(      xfflush \(NULL\);)]TJ
T*[(101:)-600(   })]TJ
T*[(102:)-600(})]TJ
(103:)'
ET
Q
Q
endstream
endobj
35 0 obj
2257
endobj
38 0 obj
<</Length 39 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.535 736.5 Tm
(hashset.c)Tj
-133.571 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: hashset.c,v 1.4 2010-11-08 19:56:46-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <stdio.h>)]TJ
T*[(5:)-600(#include <stdlib.h>)]TJ
T*[(6:)-600(#include <string.h>)]TJ
(7:)'
T*[(8:)-600(#include "hashset.h")]TJ
T*[(9:)-600(#include "strhash.h")]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(#define HASH_NEW_SIZE 15)]TJ
(12:)'
T*[(13:)-600(struct hashset {)]TJ
T*[(14:)-600(   size_t length;)]TJ
T*[(15:)-600(   int load;)]TJ
T*[(16:)-600(   char **array;)]TJ
T*[(17:)-600(};)]TJ
(18:)'
T*[(19:)-600(hashset_ref new_hashset \(void\) {)]TJ
T*[(20:)-600(   hashset_ref new = malloc \(sizeof \(struct hashset\)\);)]TJ
T*[(21:)-600(   assert \(new != NULL\);)]TJ
T*[(22:)-600(   new->length = HASH_NEW_SIZE;)]TJ
T*[(23:)-600(   new->load = 0;)]TJ
T*[(24:)-600(   new->array = malloc \(new->length * sizeof \(char*\)\);)]TJ
T*[(25:)-600(   for \(size_t index = 0; index < new->length; ++index\) {)]TJ
T*[(26:)-600(      new->array[index] = NULL;)]TJ
T*[(27:)-600(   })]TJ
T*[(28:)-600(   assert \(new->array != NULL\);)]TJ
T*[(29:)-600(   DEBUGF \('h', "%p -> struct hashset {length = %d, array=%p}\\n",)]TJ
T*[(30:)-600(                new, new->length, new->array\);)]TJ
T*[(31:)-600(   return new;)]TJ
T*[(32:)-600(})]TJ
(33:)'
T*[(34:)-600(void free_hashset \(hashset_ref hashset\) {)]TJ
T*[(35:)-600(   DEBUGF \('h', "free \(%p\), free \(%p\)\\n", hashset->array, hashset\);)]TJ
T*[(36:)-600(   xmemset \(hashset->array, 0, hashset->length * sizeof \(char*\)\);)]TJ
T*[(37:)-600(   free \(hashset->array\);)]TJ
T*[(38:)-600(   xmemset \(hashset, 0, sizeof \(struct hashset\)\);)]TJ
T*[(39:)-600(   free \(hashset\);)]TJ
T*[(40:)-600(})]TJ
(41:)'
T*[(42:)-600(void put_hashset \(hashset_ref hashset, char *item\) {)]TJ
T*[(43:)-600(   STUBPRINTF \("hashset=%p, item=%s\\n", hashset, item\);)]TJ
T*[(44:)-600(})]TJ
(45:)'
T*[(46:)-600(bool has_hashset \(hashset_ref hashset, char *item\) {)]TJ
T*[(47:)-600(   STUBPRINTF \("hashset=%p, item=%s\\n", hashset, item\);)]TJ
T*[(48:)-600(   return TRUE;)]TJ
T*[(49:)-600(})]TJ
(50:)'
ET
Q
Q
endstream
endobj
39 0 obj
2593
endobj
42 0 obj
<</Length 43 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 281.235 736.5 Tm
(strhash.c)Tj
-134.271 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: strhash.c,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <stdio.h>)]TJ
T*[(5:)-600(#include <sys/types.h>)]TJ
(6:)'
T*[(7:)-600(#include "strhash.h")]TJ
(8:)'
T*[(9:)-600(hashcode_t strhash \(char *string\) {)]TJ
-6 -11 Td
[(10:)-600(   assert \(string != NULL\);)]TJ
T*[(11:)-600(   hashcode_t hashcode = 0;)]TJ
T*[(12:)-600(   while \(*string\) hashcode = hashcode * 31 + \(unsigned char\) *string++;)]TJ
T*[(13:)-600(   return hashcode;)]TJ
T*[(14:)-600(})]TJ
(15:)'
ET
Q
Q
endstream
endobj
43 0 obj
1073
endobj
46 0 obj
<</Length 47 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/15/10)Tj
-0.659766 -12.8004 Td
(13:22:42)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 277.812 736.5 Tm
(spellchk.c)Tj
-130.848 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(// $Id: spellchk.c,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <stdio.h>)]TJ
T*[(4:)-600(#include <stdlib.h>)]TJ
T*[(5:)-600(#include <string.h>)]TJ
T*[(6:)-600(#include <unistd.h>)]TJ
(7:)'
T*[(8:)-600(#include "auxlib.h")]TJ
T*[(9:)-600(#include "hashset.h")]TJ
-6 -11 Td
[(10:)-600(#include "yyextern.h")]TJ
(11:)'
T*[(12:)-600(#define STDIN_NAME       "-")]TJ
T*[(13:)-600(#define DEFAULT_DICTNAME "/usr/share/dict/words")]TJ
T*[(14:)-600(#define DEFAULT_DICT_POS 0)]TJ
T*[(15:)-600(#define EXTRA_DICT_POS   1)]TJ
T*[(16:)-600(#define NUMBER_DICTS     2)]TJ
(17:)'
T*[(18:)-600(FILE *open_infile \(char *filename\) {)]TJ
T*[(19:)-600(   FILE *file = fopen \(filename, "r"\);)]TJ
T*[(20:)-600(   if \(file == NULL\) {)]TJ
T*[(21:)-600(      syseprintf \(filename\);)]TJ
T*[(22:)-600(      set_exitstatus \(EXIT_FAILURE\);)]TJ
T*[(23:)-600(   };)]TJ
T*[(24:)-600(   DEBUGF \('m', "filename = \\"%s\\", file = 0x%p\\n", filename, file\);)]TJ
T*[(25:)-600(   return file;)]TJ
T*[(26:)-600(})]TJ
(27:)'
T*[(28:)-600(void spellcheck \(char *filename, hashset_ref hashset\) {)]TJ
T*[(29:)-600(   yylineno = 1;)]TJ
T*[(30:)-600(   DEBUGF \('m', "filename = \\"%s\\", hashset = 0x%p\\n",)]TJ
T*[(31:)-600(                filename, hashset\);)]TJ
T*[(32:)-600(   for \(;;\) {)]TJ
T*[(33:)-600(      int token = yylex \(\);)]TJ
T*[(34:)-600(      if \(token == 0\) break;)]TJ
T*[(35:)-600(      DEBUGF \('m', "line %d, yytext = \\"%s\\"\\n", yylineno, yytext\);)]TJ
T*[(36:)-600(      STUBPRINTF \("%s: %d: %s\\n", filename, yylineno, yytext\);)]TJ
T*[(37:)-600(   };)]TJ
T*[(38:)-600(})]TJ
(39:)'
T*[(40:)-600(void load_dictionary \(char *dictionary_name, hashset_ref hashset\) {)]TJ
T*[(41:)-600(   if \(dictionary_name == NULL\) return;)]TJ
T*[(42:)-600(   DEBUGF \('m', "dictionary_name = \\"%s\\", hashset = %p\\n",)]TJ
T*[(43:)-600(           dictionary_name, hashset\);)]TJ
T*[(44:)-600(   STUBPRINTF \("Open dictionary, load it, close it\\n"\);)]TJ
T*[(45:)-600(})]TJ
(46:)'
T*[(47:)-600(int main \(int argc, char **argv\) {)]TJ
T*[(48:)-600(   char *default_dictionary = DEFAULT_DICTNAME;)]TJ
T*[(49:)-600(   char *user_dictionary = NULL;)]TJ
T*[(50:)-600(   hashset_ref hashset = new_hashset \(\);)]TJ
T*[(51:)-600(   yy_flex_debug = FALSE;)]TJ
T*[(52:)-600(   set_execname \(argv[0]\);)]TJ
(53:)'
T*[(54:)-600(   // Scan the arguments and set flags.)]TJ
T*[(55:)-600(   opterr = FALSE;)]TJ
T*[(56:)-600(   for \(;;\) {)]TJ
T*[(57:)-600(      int option = getopt \(argc, argv, "nxyd:@:"\);)]TJ
T*[(58:)-600(      if \(option == EOF\) break;)]TJ
T*[(59:)-600(      switch \(option\) {)]TJ
T*[(60:)-600(         case 'd': user_dictionary = optarg;)]TJ
T*[(61:)-600(                   break;)]TJ
T*[(62:)-600(         case 'n': default_dictionary = NULL;)]TJ
T*[(63:)-600(                   break;)]TJ
T*[(64:)-600(         case 'x': STUBPRINTF \("-x\\n"\);)]TJ
ET
Q
Q
endstream
endobj
47 0 obj
3425
endobj
50 0 obj
<</Length 51 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/15/10)Tj
-0.659766 -12.8004 Td
(13:22:42)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 277.812 736.5 Tm
(spellchk.c)Tj
-130.848 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-84.9641 -35.5 Td
[(65:)-600(                   break;)]TJ
11 TL
T*[(66:)-600(         case 'y': yy_flex_debug = TRUE;)]TJ
T*[(67:)-600(                   break;)]TJ
T*[(68:)-600(         case '@': set_debugflags \(optarg\);)]TJ
T*[(69:)-600(                   if \(strpbrk \(optarg, "@y"\)\) yy_flex_debug = TRUE;)]TJ
T*[(70:)-600(                   break;)]TJ
T*[(71:)-600(         default : eprintf \("%: -%c: invalid option\\n", optopt\);)]TJ
T*[(72:)-600(                   set_exitstatus \(EXIT_FAILURE\);)]TJ
T*[(73:)-600(      };)]TJ
T*[(74:)-600(   };)]TJ
(75:)'
T*[(76:)-600(   // Load the dictionaries into the hash table.)]TJ
T*[(77:)-600(   load_dictionary \(default_dictionary, hashset\);)]TJ
T*[(78:)-600(   load_dictionary \(user_dictionary, hashset\);)]TJ
(79:)'
T*[(80:)-600(   // Read and do spell checking on each of the files.)]TJ
T*[(81:)-600(   if \(optind >= argc\) {)]TJ
T*[(82:)-600(      yyin = stdin;)]TJ
T*[(83:)-600(      spellcheck \(STDIN_NAME, hashset\);)]TJ
T*[(84:)-600(   }else {)]TJ
T*[(85:)-600(      int fileix = optind;)]TJ
T*[(86:)-600(      for \(; fileix < argc; ++fileix\) {)]TJ
T*[(87:)-600(         DEBUGF \('m', "argv[%d] = \\"%s\\"\\n", fileix, argv[fileix]\);)]TJ
T*[(88:)-600(         char *filename = argv[fileix];)]TJ
T*[(89:)-600(         if \(strcmp \(filename, STDIN_NAME\) == 0\) {)]TJ
T*[(90:)-600(            yyin = stdin;)]TJ
T*[(91:)-600(            spellcheck \(STDIN_NAME, hashset\);)]TJ
T*[(92:)-600(         }else {)]TJ
T*[(93:)-600(            yyin = open_infile \(filename\);)]TJ
T*[(94:)-600(            if \(yyin == NULL\) continue;)]TJ
T*[(95:)-600(            spellcheck \(filename, hashset\);)]TJ
T*[(96:)-600(            xfclose \(yyin\);)]TJ
T*[(97:)-600(         })]TJ
T*[(98:)-600(      };)]TJ
T*[(99:)-600(   })]TJ
-6 -11 Td
[(100:)-600(   )]TJ
T*[(101:)-600(   yycleanup \(\);)]TJ
T*[(102:)-600(   return get_exitstatus \(\);)]TJ
T*[(103:)-600(})]TJ
(104:)'
ET
Q
Q
endstream
endobj
51 0 obj
2442
endobj
54 0 obj
<</Length 55 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:47)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.85 736.5 Tm
(scanner.l)Tj
-133.886 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(%{)]TJ
11 TL
T*[(2:)-600(// $Id: scanner.l,v 1.1 2010-11-04 19:15:48-07 - - $)]TJ
(3:)'
T*[(4:)-600(#include <stdlib.h>)]TJ
(5:)'
T*[(6:)-600(#include "auxlib.h")]TJ
T*[(7:)-600(#include "yyextern.h")]TJ
(8:)'
T*[(9:)-600(%})]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(%option 8bit)]TJ
T*[(12:)-600(%option debug)]TJ
T*[(13:)-600(%option ecs)]TJ
T*[(14:)-600(%option interactive)]TJ
T*[(15:)-600(%option nodefault)]TJ
T*[(16:)-600(%option noyywrap)]TJ
T*[(17:)-600(%option yylineno)]TJ
(18:)'
T*[(19:)-600(NUMBER  \([[:digit:]]+\([-:.][[:digit:]]+\)*\))]TJ
T*[(20:)-600(WORD    \([[:alnum:]]+\([-&'.][[:alnum:]]+\)*\))]TJ
T*[(21:)-600(OTHER   \(.|\\n\))]TJ
(22:)'
T*[(23:)-600(%%)]TJ
(24:)'
T*[(25:)-600({NUMBER}        { })]TJ
T*[(26:)-600({WORD}          { return 1;  })]TJ
T*[(27:)-600({OTHER}         { })]TJ
(28:)'
T*[(29:)-600(%%)]TJ
(30:)'
T*[(31:)-600(void yycleanup \(void\) {)]TJ
T*[(32:)-600(   yy_delete_buffer \(YY_CURRENT_BUFFER\);)]TJ
T*[(33:)-600(})]TJ
(34:)'
ET
Q
Q
endstream
endobj
55 0 obj
1500
endobj
58 0 obj
<</Length 59 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:47)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.773 736.5 Tm
(Makefile)Tj
-133.809 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(# $Id: Makefile,v 1.3 2010-11-04 19:36:19-07 - - $)]TJ
11 TL
T*[(2:)-600(MKFILE    = Makefile)]TJ
T*[(3:)-600(DEPSFILE  = ${MKFILE}.deps)]TJ
T*[(4:)-600(NOINCLUDE = ci clean spotless)]TJ
T*[(5:)-600(NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}})]TJ
T*[(6:)-600(GMAKE     = gmake --no-print-directory)]TJ
(7:)'
T*[(8:)-600(CCOPT     = -Xa -v -g -xO0)]TJ
T*[(9:)-600(LINTOPT   = -Xa -fd -m -u -x -errchk=%all)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(CSOURCE   = auxlib.c hashset.c strhash.c spellchk.c)]TJ
T*[(12:)-600(CHEADER   = auxlib.h hashset.h strhash.h yyextern.h)]TJ
T*[(13:)-600(OBJECTS   = ${CSOURCE:.c=.o} scanner.o)]TJ
T*[(14:)-600(EXECBIN   = spellchk)]TJ
T*[(15:)-600(SUBMITS   = ${CHEADER} ${CSOURCE} scanner.l ${MKFILE})]TJ
T*[(16:)-600(SOURCES   = ${SUBMITS})]TJ
T*[(17:)-600(LISTING   = ../asg4c-spellchk.code.ps)]TJ
T*[(18:)-600(PROJECT   = cmps012b-wm.f10 asg4)]TJ
(19:)'
T*[(20:)-600(all : ${EXECBIN})]TJ
(21:)'
T*[(22:)-600(${EXECBIN} : ${OBJECTS})]TJ
T*[(23:)-600(        cc ${CCOPT} -o $@ ${OBJECTS})]TJ
(24:)'
T*[(25:)-600(scanner.o : scanner.l)]TJ
T*[(26:)-600(        flex -oscanner.c scanner.l)]TJ
T*[(27:)-600(        cc -g -xO0 -c scanner.c)]TJ
(28:)'
T*[(29:)-600(%.o : %.c)]TJ
T*[(30:)-600(        cc ${CCOPT} -c $<)]TJ
(31:)'
T*[(32:)-600(lint : ${CSOURCE})]TJ
T*[(33:)-600(        lint ${LINTOPT} ${CSOURCE})]TJ
T*[(34:)-600(        checksource ${SUBMITS})]TJ
(35:)'
T*[(36:)-600(ci : ${SOURCES})]TJ
T*[(37:)-600(        cid + ${SOURCES})]TJ
T*[(38:)-600(        checksource ${SUBMITS})]TJ
(39:)'
T*[(40:)-600(lis : ${SOURCES} ${DEPSFILE})]TJ
T*[(41:)-600(        mkpspdf ${LISTING} ${SOURCES} ${DEPSFILE})]TJ
(42:)'
T*[(43:)-600(clean :)]TJ
T*[(44:)-600(        - rm ${OBJECTS} ${DEPSFILE} core scanner.c ${EXECBIN}.errs)]TJ
(45:)'
T*[(46:)-600(spotless : clean)]TJ
T*[(47:)-600(        - rm ${EXECBIN})]TJ
(48:)'
T*[(49:)-600(submit : ${SUBMITS})]TJ
T*[(50:)-600(        submit ${PROJECT} ${SUBMITS})]TJ
T*[(51:)-600(        testsubmit ${PROJECT} ${SUBMITS})]TJ
(52:)'
T*[(53:)-600(deps : ${CSOURCE} ${CHEADER})]TJ
T*[(54:)-600(        @ echo "# ${DEPSFILE} created `date`" >${DEPSFILE})]TJ
T*[(55:)-600(        cc -xM1 ${CSOURCE} \\)]TJ
T*[(56:)-600(        | grep -v /usr/local/sunstudio/sunstudio12.1/prod/include/ \\)]TJ
T*[(57:)-600(        | sort | uniq >>${DEPSFILE})]TJ
(58:)'
T*[(59:)-600(${DEPSFILE} :)]TJ
T*[(60:)-600(        @ touch ${DEPSFILE})]TJ
T*[(61:)-600(        ${GMAKE} deps)]TJ
(62:)'
T*[(63:)-600(again :)]TJ
T*[(64:)-600(        ${GMAKE} spotless deps ci lint all lis)]TJ
ET
Q
Q
endstream
endobj
59 0 obj
3063
endobj
62 0 obj
<</Length 63 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:47)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.773 736.5 Tm
(Makefile)Tj
-133.809 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-84.9641 -35.5 Td
(65:)Tj
11 TL
T*[(66:)-600(ifeq "${NEEDINCL}" "")]TJ
T*[(67:)-600(include ${DEPSFILE})]TJ
T*[(68:)-600(endif)]TJ
(69:)'
ET
Q
Q
endstream
endobj
63 0 obj
643
endobj
66 0 obj
<</Length 67 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(11/08/10)Tj
-0.659766 -12.8004 Td
(19:56:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 266.192 736.5 Tm
(Makefile.deps)Tj
-119.228 18 Td
($cmps012b-wm/Assignments/asg4c-spellchk-hash/code/)Tj
/R10 10 Tf
-78.9641 -35.5 Td
[(1:)-600(# Makefile.deps created Mon Nov  8 19:56:46 PST 2010)]TJ
11 TL
T*[(2:)-600(auxlib.o: auxlib.c)]TJ
T*[(3:)-600(auxlib.o: auxlib.h)]TJ
T*[(4:)-600(hashset.o: auxlib.h)]TJ
T*[(5:)-600(hashset.o: hashset.c)]TJ
T*[(6:)-600(hashset.o: hashset.h)]TJ
T*[(7:)-600(hashset.o: strhash.h)]TJ
T*[(8:)-600(spellchk.o: auxlib.h)]TJ
T*[(9:)-600(spellchk.o: hashset.h)]TJ
-6 -11 Td
[(10:)-600(spellchk.o: spellchk.c)]TJ
T*[(11:)-600(spellchk.o: yyextern.h)]TJ
T*[(12:)-600(strhash.o: auxlib.h)]TJ
T*[(13:)-600(strhash.o: strhash.c)]TJ
T*[(14:)-600(strhash.o: strhash.h)]TJ
ET
Q
Q
endstream
endobj
67 0 obj
1094
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 12 0 R
>>
/Contents 5 0 R
>>
endobj
13 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 16 0 R
>>
/Contents 14 0 R
>>
endobj
17 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 20 0 R
>>
/Contents 18 0 R
>>
endobj
21 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 24 0 R
>>
/Contents 22 0 R
>>
endobj
25 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 28 0 R
>>
/Contents 26 0 R
>>
endobj
29 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 32 0 R
>>
/Contents 30 0 R
>>
endobj
33 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 36 0 R
>>
/Contents 34 0 R
>>
endobj
37 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 40 0 R
>>
/Contents 38 0 R
>>
endobj
41 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 44 0 R
>>
/Contents 42 0 R
>>
endobj
45 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 48 0 R
>>
/Contents 46 0 R
>>
endobj
49 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 52 0 R
>>
/Contents 50 0 R
>>
endobj
53 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 56 0 R
>>
/Contents 54 0 R
>>
endobj
57 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 60 0 R
>>
/Contents 58 0 R
>>
endobj
61 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 64 0 R
>>
/Contents 62 0 R
>>
endobj
65 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 68 0 R
>>
/Contents 66 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
13 0 R
17 0 R
21 0 R
25 0 R
29 0 R
33 0 R
37 0 R
41 0 R
45 0 R
49 0 R
53 0 R
57 0 R
61 0 R
65 0 R
] /Count 15
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
>>
endobj
12 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R/R11
11 0 R>>
endobj
16 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
20 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
24 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
28 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
32 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
36 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
40 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
44 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
48 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
52 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
56 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
60 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
64 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
68 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
8 0 obj
<</BaseFont/Times-Roman/Type/Font
/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/Courier/Type/Font
/Subtype/Type1>>
endobj
7 0 obj
<</BaseFont/Helvetica-Bold/Type/Font
/Subtype/Type1>>
endobj
9 0 obj
<</BaseFont/Times-Bold/Type/Font
/Subtype/Type1>>
endobj
11 0 obj
<</BaseFont/Courier-Bold/Type/Font
/Subtype/Type1>>
endobj
2 0 obj
<</Producer(ESP Ghostscript 815.02)
/CreationDate(D:20101115132246)
/ModDate(D:20101115132246)>>endobj
xref
0 69
0000000000 65535 f 
0000035171 00000 n 
0000036446 00000 n 
0000035013 00000 n 
0000032990 00000 n 
0000000009 00000 n 
0000003203 00000 n 
0000036244 00000 n 
0000036115 00000 n 
0000036313 00000 n 
0000036181 00000 n 
0000036378 00000 n 
0000035219 00000 n 
0000033123 00000 n 
0000003223 00000 n 
0000006100 00000 n 
0000035289 00000 n 
0000033258 00000 n 
0000006121 00000 n 
0000007729 00000 n 
0000035348 00000 n 
0000033393 00000 n 
0000007750 00000 n 
0000009682 00000 n 
0000035407 00000 n 
0000033528 00000 n 
0000009703 00000 n 
0000011231 00000 n 
0000035466 00000 n 
0000033663 00000 n 
0000011252 00000 n 
0000014223 00000 n 
0000035525 00000 n 
0000033798 00000 n 
0000014244 00000 n 
0000016553 00000 n 
0000035584 00000 n 
0000033933 00000 n 
0000016574 00000 n 
0000019219 00000 n 
0000035643 00000 n 
0000034068 00000 n 
0000019240 00000 n 
0000020365 00000 n 
0000035702 00000 n 
0000034203 00000 n 
0000020386 00000 n 
0000023863 00000 n 
0000035761 00000 n 
0000034338 00000 n 
0000023884 00000 n 
0000026378 00000 n 
0000035820 00000 n 
0000034473 00000 n 
0000026399 00000 n 
0000027951 00000 n 
0000035879 00000 n 
0000034608 00000 n 
0000027972 00000 n 
0000031087 00000 n 
0000035938 00000 n 
0000034743 00000 n 
0000031108 00000 n 
0000031803 00000 n 
0000035997 00000 n 
0000034878 00000 n 
0000031823 00000 n 
0000032969 00000 n 
0000036056 00000 n 
trailer
<< /Size 69 /Root 1 0 R /Info 2 0 R
/ID [<6C84D539D678C294F3305B140EED5988><6C84D539D678C294F3305B140EED5988>]
>>
startxref
36557
%%EOF

head	1.1;
access;
symbols;
locks;
comment	@// @;


1.1
date	2010.01.30.02.07.32;	author -;	state -;
branches;
next	;


desc
@@


1.1
log
@-
@
text
@
#include <typeinfo>

using namespace std;

#include "object.h"
#include "util.h"

#define WHOAMI \
        "[" << typeid(*this).name() << "@@" << (void *) this << "]"

#define CTRACE(ARGS) \
        TRACE ('c', WHOAMI << " " << ARGS)

#define DTRACE(ARGS) \
        TRACE ('d', WHOAMI << " coords=" << coords \
               << " angle=" << angle << endl << ARGS);

object::~object () {
   CTRACE ("delete");
}

text::text (const string &font, const points &size, const string &data):
      fontname(font), fontsize(size), textdata(data) {
   CTRACE ("font=" << fontname << " size=" << fontsize
           << " \"" << textdata << "\"")
}

ellipse::ellipse (const inches &initheight, const inches &initwidth,
                  const points &initthick):
      shape(initthick), height(initheight), width(initwidth) {
   CTRACE ("height=" << height << " width=" << width
           << " thick=" << thick);
}

circle::circle (const inches &diameter, const points &thick):
      ellipse (diameter, diameter, thick) {
}

polygon::polygon (const coordlist &coords, const points &initthick):
      shape(initthick), coordinates(coords) {
   CTRACE ( "thick=" << thick << " coords=" << endl
            << coordinates);
}

rectangle::rectangle (const inches &height, const inches &width,
                      const points &initthick):
      polygon (make_list (height, width), initthick) {
}

square::square (const inches &width, const points &thick):
      rectangle (width, width, thick) {
}

line::line (const inches &length, const points &initthick):
      polygon (make_list (length), initthick) {
      
}

void text::draw (ostream &out, const xycoords &coords,
                const degrees &angle) {
   DTRACE ("font=" << fontname << " size=" << fontsize
           << " \"" << textdata << "\"")
}

void ellipse::draw (ostream &out, const xycoords &coords,
                const degrees &angle) {
   DTRACE ("height=" << height << " width=" << width
           << " thick=" << thick);
}

void polygon::draw (ostream &out, const xycoords &coords,
                const degrees &angle) {
   DTRACE ( "thick=" << thick << " coords=" << endl
            << coordinates);
}

coordlist rectangle::make_list (
            const inches &height, const inches &width) {
   coordlist coordlist;
   return coordlist;
}

coordlist line::make_list (const inches &length) {
   coordlist coordlist;
   return coordlist;
}


RCSC(__object_cc__,
"$Id: object.cc,v 1.1 2009-02-20 15:04:01-08 - - $")
@
